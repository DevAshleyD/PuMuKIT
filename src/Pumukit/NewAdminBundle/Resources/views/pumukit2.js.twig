window.submit_delete_role = function(id, countMm)
{
    if (countMm == 0){
        if (window.confirm("{% trans %}Are you sure you want to delete this role?{% endtrans %}")){
            var url = "{{ path('pumukitadmin_role_delete', {'id': '__id__'})|raw }}";
            var message = "{% trans %}Deleted Role{% endtrans %}";
            $('#list_roles').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
        }
    }else{
        window.alert("{% trans %}Impossible to delete, role with{% endtrans %} "+countMm+" {% trans %}people{% endtrans %}");
    }
}

window.submit_delete_user = function(id, userFullname)
{
    if (window.confirm("{% trans %}Are you sure you want to delete the user{% endtrans %} "+userFullname+"?")){
        var url = "{{ path('pumukitadmin_user_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Deleted User{% endtrans %} "'+userFullname+'" OK.';
        $('#list_users').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
    }
}

window.submit_delete_broadcast = function(id, countMm)
{
    if (countMm == 0){
        if (window.confirm("{% trans %}Are you sure you want to delete this broadcast?{% endtrans %}")){
            var url = "{{ path('pumukitadmin_broadcast_delete', {'id': '__id__'})|raw }}";
            var message = '{% trans %}Deleted Broadcast successfully.{% endtrans %}';
            $('#list_broadcasts').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
        }
    }else{
        window.alert("{% trans %}Impossible to delete, broadcast with{% endtrans %} "+countMm+" {% trans %}multimedia object(s).{% endtrans %}");
    }
}

window.submit_delete_direct = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to delete this channel?{% endtrans %}")){
        var url = "{{ path('pumukitadmin_direct_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Live channel deleted.{% endtrans %}';
        $('#list_directs').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
    }
}

window.submit_delete_mms = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to delete this multimedia object?{% endtrans %}")){
        var url = "{{ path('pumukitnewadmin_mms_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Multimedia Object deleted.{% endtrans %}';
        $('#list_mms').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
    }
}

window.submit_delete_series = function(id, seriesTitle, countMm)
{
    if (window.confirm('{% trans %}Are you sure you want to delete the series{% endtrans %} "'+seriesTitle+'"? {% trans %}This series has{% endtrans %} '+countMm+' {% trans %}multimedia object(s){% endtrans %}.')){
        var url = "{{ path('pumukitnewadmin_series_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Deleted Series{% endtrans %} "'+seriesTitle+'".';
        $.ajax({
            url: url.replace('__id__', id),
            type: 'POST',
            success: function(response){
                $('#list_series').html(response);
                success(message);
            }
        });
    }
}

success = function(message){
    $('#div_messages_span_info').html(message);
    $('#div_messages_span_info').show(3500);
    $('#div_messages_span_info').hide(3500);
}

no_success = function(message){
    $('#div_messages_span_error').innerHTML = message;
    $('#div_messages_span_error').show(3500);
    $('#div_messages_span_error').hide(3500);
}

window.update_preview = function(id) {
  var route = '{{ path('pumukitnewadmin_series_show', {'id': 'PLACEHOLDER'}) }}';
  route.replace('PLACEHOLDER', id);
  $('#preview_series').load(route, {method:'POST'});
}

window.delete_seriespic = function(id) {
    if (window.confirm('{% trans %}Are you sure you want to delete this picture?{% endtrans %}')) {
        var url = '{{ path('pumukitnewadmin_seriespic_delete', {'id': '___id___'}) }}';
        $('#pic_series').load(url.replace('___id___', id), {parameters: {'_method': 'DELETE'}});
    }
}

window.up_seriespic = function(id) {
    var url = '{{ path('pumukitnewadmin_seriespic_up', {'id': '___id___'}) }}';
    $('#pic_series').load(url.replace('___id___', id), {method:'POST'});
}

window.down_seriespic = function(id) {
    var url = '{{ path('pumukitnewadmin_seriespic_down', {'id': '___id___'}) }}';
    $('#pic_series').load(url.replace('___id___', id), {method:'POST'});
}

window.submit_delete_person_relation = function(id, roleId, mmId, hName, template)
{
    if (window.confirm("{% trans %}Are you sure you want to delete the relation of{% endtrans %} "+hName+"?")){
        if ('_template' === template){
            var tag_id = roleId+'_person_mms'+template;
        }else{
            var tag_id = '#'+roleId+'_person_mms';
        }
        var url = "{{ path('pumukitnewadmin_person_delete_relation', {'id': '__id__', 'roleId': '__roleId__','mmId': '__mmId__'}) }}";
        url = url.replace('__id__', id);
        url = url.replace('__roleId__', roleId);
        url = url.replace('__mmId__', mmId);
        $(tag_id).load(url, {parameters: {'_method': 'DELETE'}});
        var url = "{{ path('pumukitnewadmin_mms_show', {'id': '__mmId__'}) }}";
        $('#preview_mm').load(url.replace('__mmId__', mmId));
    }
}

window.submit_delete_link = function(id, mmId)
{
    if (window.confirm('{% trans %}Are you sure you want to delete this link?{% endtrans %}')){
        var url = "{{ path('pumukitadmin_link_delete', {'id': 'PLACEHOLDER_ID', 'mmId': 'PLACEHOLDER_MMID'}) }}";
        url = url.replace('PLACEHOLDER_ID', id);
        url = url.replace('PLACEHOLDER_MMID', mmId);
        $('#links_mms').load(url, {parameters: {'_method': 'DELETE'}});
    }
}

window.delete_mmspic = function(id) {
    if (window.confirm('{% trans %}Are you sure you want to delete this picture?{% endtrans %}')) {
        var url = '{{ path('pumukitnewadmin_mmspic_delete', {'id': '___id___'}) }}';
        $('#pic_mms').load(url.replace('___id___', id), {parameters: {'_method': 'DELETE'}});
    }
}

window.up_mmspic = function(id) {
    var url = '{{ path('pumukitnewadmin_mmspic_up', {'id': '___id___'}) }}';
    $('#pic_mms').load(url.replace('___id___', id), {method:'POST'});
}

window.down_mmspic = function(id) {
    var url = '{{ path('pumukitnewadmin_mmspic_down', {'id': '___id___'}) }}';
    $('#pic_mms').load(url.replace('___id___', id), {method:'POST'});
}

window.submit_delete_material = function(id, mmId)
{
    if (window.confirm('{% trans %}Are you sure you want to delete this material?{% endtrans %}')){
        var url = "{{ path('pumukitadmin_material_delete', {'id': 'PLACEHOLDER_ID', 'mmId': 'PLACEHOLDER_MMID'}) }}";
        url = url.replace('PLACEHOLDER_ID', id);
        url = url.replace('PLACEHOLDER_MMID', mmId);
        $('#materials_mms').load(url, {parameters: {'_method': 'DELETE'}});
    }
}

window.submit_delete_track = function(id, mmId)
{
    if (window.confirm('{% trans %}Are you sure you want to delete this track?{% endtrans %}')){
        var url = "{{ path('pumukitadmin_track_delete', {'id': 'PLACEHOLDER_ID', 'mmId': 'PLACEHOLDER_MMID'}) }}";
        url = url.replace('PLACEHOLDER_ID', id);
        url = url.replace('PLACEHOLDER_MMID', mmId);
        $('#tracks_mms').load(url, {parameters: {'_method': 'DELETE'}});
    }
}

window.submit_delete_person = function(id, countMm, personHName)
{
    if (countMm == 0){
        if (window.confirm("{% trans %}Are you sure you want to delete the data of{% endtrans %} "+personHName+"?")){
            var url = "{{ path('pumukitnewadmin_person_delete', {'id': '__id__'}) }}";
            $('#list_people').load(url.replace('__id__', id), {'_method': 'DELETE'});
    }
    }else{
        window.alert('{% trans %}Cannot delete the data of{% endtrans %} '+personHName+'. '+ countMm+' {% trans %}multimedia object(s) contain(s) this person{% endtrans %}.');
    }
}

window.click_fila_url = function(element, tr, url)
{
  $('#preview_'+element).load(url);

  $('.success').removeClass('success');
  $(tr.parentNode).addClass('success');
}

window.click_checkbox_all = function(element, value)
{
  $('input.'+element+'_checkbox').prop('checked', value);
}

window.filter_click_letter = function(letter)
{
  $('#filters_letter').val(letter);
  $('#list_people').load('{{ path('pumukitnewadmin_person_list') }}', $('#filter_people').serialize());
}

// TODO complete todos
window.change_select = function(element, selector)
{
    var i = selector.val();
    switch(i){
/* TODO
    case 'transc_pause':
        if (confirm('Pausar videos')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/pause', {
		            asynchronous: true,
		            evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
		            parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			    );
        }
        break;
    case 'transc_play':
        if (confirm('Reanudar videos')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/continue', {
		            asynchronous: true,
		            evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
		            parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			    );
        }
        break;
    case 'transc_borrar':
        if (confirm('Borrar objetos multimedia')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/delete', {
		asynchronous: true,
		evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
		parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			    );
        }
        break;
    case 'transc_limpiar':
        if (confirm('Limpiar videos completados del listado')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/clean', {
		            asynchronous: true,
		            evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
		            parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			    );
        }
        break;
*/

    case 'delete_selected':
        var ids = [];
        $('.' + element + '_checkbox:checked').each(function(){
            var $this = $(this);
            ids.push($this.attr("id"));
        });
        if (ids.length == 0) break;
        if (confirm('{% trans %}Are you sure?{% endtrans %}')) {
            var route = '{{ path('pumukitnewadmin_person_batch_delete', {'ids': '__ids__'}) }}';
            $('#list_people').load(route.replace('__ids__', JSON.stringify(ids)));
        }
        break;
    case 'create':
        $('.modal-content').load("{{ path('pumukitnewadmin_person_create') }}");
        $('#myModal').modal('show');
        selector.selectedIndex = 0;
        break;
/* TODO
    case 'serial_preview':
        window.open('/editar.php/serials/previewall');
        selector.selectedIndex = 0;
        break;
    case 'serial_master':
	Modalbox.show('/editar.php/transcoders/masterserial', {title:'Master Multimedia', width:800});
        selector.selectedIndex = 0;
        break;
      //separar honores sel
    case 'inv_working_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/working', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
      //separar honores sel
    case 'inv_working_all':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/working', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'all=1'}
			);
        break;
    //order mm
    case 'set_order_rec_asc':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/orderby/type/rec_asc', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'serial=' + $('mms_serial_id').value}
			);
        break;
    //order mm
    case 'set_order_rec_des':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/orderby/type/rec_des', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'serial=' + $('mms_serial_id').value}
			);
        break;    //order mm
    case 'set_order_pub_asc':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/orderby/type/pub_asc', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'serial=' + $('mms_serial_id').value}
			);
        break;    //order mm
    case 'set_order_pub_des':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/orderby/type/pub_des', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'serial=' + $('mms_serial_id').value}
			);
        break;
    case 'cut_mm':
        selected = $$('.mm_checkbox:checked');
        if (selected.length == 0) break;
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/cut', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+selected.invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'paste_mm':
        if (confirm('Pegar objeto multimedia')) {
            new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/paste', {
		asynchronous: true,
		evalScripts: true,
		onSuccess:  selector.selectedIndex = 0,
		parameters: 'serial=' + $('mms_serial_id').value}
			    );
	}
        break;
      //status mm
    case 'set_status_0_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/0', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'set_status_1_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/1', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'set_status_2_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/2', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'set_status_3_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/3', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'inv_announce_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/inv/field/announce', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'inv_announce_virtualserial_sel':
        new Ajax.Updater('list_mms', '/editar.php/virtualserial/inv/field/announce', {
            asynchronous: true,
            evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
            parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
                        );
        break;
*/
    }
  selector.selectedIndex = 0;

}


/**
 * Tag tree functions
 */

function select_tree_tag(element)
{
  $(element).siblings(".active").removeClass("active").end().addClass("active");
  return false;
}

function toggle_tree_tag(element, id, mm_id, tag_id, tag_cod) 
{
  parent = $(element.parentElement);
  if (parent.hasClass("notload")) {
    parent.removeClass("notload");
  
    var route = "{{ path('pumukitnewadmin_mms_getchildrentag', {'id': 'PLACEHOLDER_TAG_ID'}) }}";
    route = route.replace('PLACEHOLDER_MM_ID', mm_id).replace('PLACEHOLDER_TAG_ID', id);

    $.get(route + "?tag_id=" + tag_id + "&mm_id=" + mm_id, function(responseText, textStatus, jqXHR){
        parent.after(responseText);
    });
    parent.addClass("expanded").removeClass("collapsed");
  } else {
    if (parent.hasClass("expanded")) {
      $(".c_" + tag_cod).hide();      
      $(".c_" + tag_cod+".expanded").removeClass("expanded").addClass("collapsed");
      parent.removeClass("expanded").addClass("collapsed");
    } else {
      $(".tag_li_parent_" + id).show();
      parent.addClass("expanded").removeClass("collapsed");
    }
    
  }

}

// TODO
function toggle_show_all()
{
  // SHOW - Quito el punto a los nodos que muestran sus hijos al desocultar
  $$(".expanded.element, .collapsed.element").each(function(e){
    e.removeClassName("element");
  });

  // SHOW & HIDE - Oculto/Muestro elementos finales que no tiene objetos multimedia
  $$(".nomm.element").each(function(e){
    e.toggleClassName("nodisplayall");
  });

  // SHOW & HIDE - Oculto/Muestro elementos todos sus hijos son finales sin objetos multimedia
  $$(".nomm.expanded, .nomm.collapsed").each(function(e){
    if (e.getElementsBySelector("li.nomm").length == e.getElementsBySelector("li").length) {
      e.toggleClassName("nodisplayall");
    }
  });

  // HIDE - Pongo el punto a los nodos que se quedan sin hijos al ocultar
  $$(".nomm").each(function(e){
    p = e.parentElement.parentElement;
    if (p.getElementsBySelector("li.nodisplayall").length == p.getElementsBySelector("li").length) {
      p.addClassName("element");
    }
  });

}


function create_element_in_select(tag, block_tag_id, mm_id) {
  var $ul = $("#select_ul_tag_cod_" + block_tag_id);
  $ul.append('<a href="#" ondblclick="javascript:del_tree_tag(\'' + tag.id + '\', \'' + mm_id +'\');" onclick="return select_tree_tag(this);" class="list-group-item" id="select_li_' + tag.id + '">' + tag.cod + ' - ' + tag.name +'</a>');
}

function inc_num_mm(tag_id, num)
{
  var aux = $("#info_num_mm_" + tag_id);
  if (aux){
    var nn = (parseInt(aux.text()) + num);
    aux.text(nn);
  }
}

function add_tree_tag(tag_id, mm_id, block_tag_id) 
{
  var route = "{{ path('pumukitadmin_mms_addtag', {'id': 'PLACEHOLDER_MM_ID', 'tagId': 'PLACEHOLDER_TAG_ID' }) }}";
  route = route.replace('PLACEHOLDER_MM_ID', mm_id).replace('PLACEHOLDER_TAG_ID', tag_id);
  $.post(route, {"tag": tag_id}, function(data, textStatus, jqXHR){
    for (var i=0; i < data.added.length; i++) {
      var c = data.added[i];
      inc_num_mm(c.id, 1);
      var aux = c.group.split("|");
      if(aux[1] && aux.length > 3) create_element_in_select(c, aux[1], mm_id);
    }
  });
}


function del_tree_tag(tag_id, mm_id) 
{
  var route = "{{ path('pumukitadmin_mms_deletetag', {'id': 'PLACEHOLDER_MM_ID', 'tagId': 'PLACEHOLDER_TAG_ID' }) }}";
  route = route.replace('PLACEHOLDER_TAG_ID', tag_id).replace('PLACEHOLDER_MM_ID', mm_id);
  $.ajax({
    url: route, 
    type: 'DELETE',
    parameters: {'_method': 'DELETE'}, 
    success: function(response){
      for (var i=0; i<response.deleted.length; i++) {
        var c = response.deleted[i];
        var $_element = $("#select_li_" + c.id);
        if ($_element)  $_element.remove();
        inc_num_mm(c.id, -1);
      }
    }
  });
}

window.click_fila_edit_urls = function(element, tr, show_url, update_url)
{
    $('#preview_'+element).load(show_url);

    $('#edit_'+element).load(update_url);

    $('.success').removeClass('success');
    $(tr.parentNode).addClass('success');
}

window.dblclick_fila_url = function(element, tr, url)
{
  document.location.href= (url);
}

function testDates(init, end, re_date) {

    if ((typeof(init) == 'undefined') || (init ==  null) || (init == "")) {
        return true;
    }

    if ((typeof(end) == 'undefined') || (end ==  null) || (end == "")) {
        return true;
    }

    var partes = init.split(" ");
    var fecha = partes[0];
    var hora = partes[1];
    var partes_fecha = fecha.split("/");
    if (typeof(hora) != 'undefined' && hora !=  null) {
        var partes_hora = hora.split(":");	
        var ini = new Date(partes_fecha[2], partes_fecha[1] - 1, partes_fecha[0], partes_hora[0], partes_hora[1]);
    }else{
        var ini = new Date(partes_fecha[2], partes_fecha[1] - 1, partes_fecha[0]);
    }

    partes = end.split(" ");
    fecha = partes[0];
    hora = partes[1];
    partes_fecha = fecha.split("/");
    if (typeof(hora) != 'undefined' && hora !=  null) {
        partes_hora = hora.split(":");
        var fi = new Date(partes_fecha[2], partes_fecha[1] - 1 , partes_fecha[0], partes_hora[0], partes_hora[1]);
    }else{
        var fi = new Date(partes_fecha[2], partes_fecha[1] - 1 , partes_fecha[0]);
    }

    if (comprobar_date(init, re_date)){
        alert ("El formato de la fecha de inicio no es el adecuado. Utilice dd/mm/aaaa hh:mm");
        return false;
    }
  
    if (comprobar_date(end, re_date)){
        alert ("El formato de fecha de fin no es el adecuado. Utilice dd/mm/aaaa hh:mm");
        return false;
    }

    if (ini.getTime() > fi.getTime()) {
        alert("La fecha inicial es posterior a la fecha final");
        return false;
    }

    //Modalbox.hide();
    return true;  
}

function comprobar_date(date, re){
    return !re.test(date); 
}

procesaOk = function(){
  /* TODO get user culture expression for timedate instead of fixed static expression
  // get_js_regexp_timedate($sf_user->getCulture())
  if(comprobar_form_pub( $("temporizada1_temporizada").checked, $("timestart1").value, $("timeend1").value,
                         $("temporizada2_temporizada").checked, $("timestart2").value, $("timeend2").value,
                         /^(\d+)\/(\d+)\/(\d+) (\d+):(\d+)(:(\d+))?$/
                         )) {
    borraFechasSiInactivas();
    $('remember_save_mm_pub').hide();
    return true;
  } else {
    return false;
  }*/
  $('#remember_save_mm_pub').hide();
  return true;
}
procesaReset = function(){
  $('#remember_save_mm_pub').hide();
  $('#error_start1').hide();
  $('#error_end1').hide();
  $('#error_start2').hide();
  $('#error_end2').hide();
  /* {# TODO CHECK BROADCAST EMPTY
  if ( {{ mm.getBroadcast().id }} != 1 ) {
     $('broadcast_password').show();
  } else {
     $('broadcast_password').hide();
  } #} */
}

/**
 * Global Ajax Event Handlers
 */
$(document).ajaxSuccess(function() {
  $.material.init();
});

$(document).ajaxError(function(event, xhr, settings) {
  if (403 == xhr.status) {
    window.location.href = "{{ path('fos_user_security_login') }}";
  }
});


/**
 * Init material on load
 */
$(function() {
  $.material.init();

  $('body').on('hidden.bs.modal', '.modal', function () {
    $(this).removeData('bs.modal');
  });

});

