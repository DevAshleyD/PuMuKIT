window.submit_delete_role = function(id, countMm)
{
    if (countMm == 0){
        if (window.confirm("{% trans %}Are you sure you want to delete this role?{% endtrans %}")){
            var url = "{{ path('pumukitadmin_role_delete', {'id': '__id__'})|raw }}";
            var message = "{% trans %}Deleted Role{% endtrans %}";
            $('#list_roles').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
        }
    }else{
        window.alert("{% trans %}Impossible to delete, role with{% endtrans %} "+countMm+" {% trans %}people{% endtrans %}");
    }
}

window.submit_delete_user = function(id, userFullname)
{
    if (window.confirm("{% trans %}Are you sure you want to delete the user{% endtrans %} "+userFullname+"?")){
        var url = "{{ path('pumukitadmin_user_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Deleted User{% endtrans %} "'+userFullname+'" OK.';
        $('#list_users').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
    }
}

window.submit_delete_broadcast = function(id, countMm)
{
    if (countMm == 0){
        if (window.confirm("{% trans %}Are you sure you want to delete this broadcast?{% endtrans %}")){
            var url = "{{ path('pumukitadmin_broadcast_delete', {'id': '__id__'})|raw }}";
            var message = '{% trans %}Deleted Broadcast successfully.{% endtrans %}';
            $('#list_broadcasts').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
        }
    }else{
        window.alert("{% trans %}Impossible to delete, broadcast with{% endtrans %} "+countMm+" {% trans %}multimedia object(s).{% endtrans %}");
    }
}

window.submit_delete_direct = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to delete this channel?{% endtrans %}")){
        var url = "{{ path('pumukitadmin_direct_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Live channel deleted.{% endtrans %}';
        $('#list_directs').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
    }
}

window.submit_delete_mms = function(id)
{
    if (window.confirm("{% trans %}Are you sure you want to delete this multimedia object?{% endtrans %}")){
        var url = "{{ path('pumukitadmin_mms_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Multimedia Object deleted.{% endtrans %}';
        $('#list_mms').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
    }
}

window.submit_delete_series = function(id, seriesTitle, countMm)
{
    if (window.confirm('{% trans %}Are you sure you want to delete the series{% endtrans %} "'+seriesTitle+'"? {% trans %}This series has{% endtrans %} '+countMm+' {% trans %}multimedia object(s){% endtrans %}.')){
        var url = "{{ path('pumukitadmin_series_delete', {'id': '__id__'})|raw }}";
        var message = '{% trans %}Deleted Series{% endtrans %} "'+seriesTitle+'".';
        $('#list_series').load(url.replace('__id__', id), {parameters: {'_method': 'DELETE'}}, success(message));
    }
}

function success(message){
  $('div_messages_span_info').innerHTML = message;
  new Effect.Opacity('div_messages_info', {duration:7.0, from:1.0, to:0.0});
}

window.update_preview = function(id) {
  var route = '{{ path('pumukitadmin_series_show', {'id': 'PLACEHOLDER'}) }}';
  route.replace('PLACEHOLDER', id);
  $('#preview_series').load(route, {method:'POST'});
}

window.delete_seriespic = function(id) {
    if (window.confirm('{% trans %}Are you sure you want to delete this picture?{% endtrans %}')) {
        var url = '{{ path('pumukitadmin_seriespic_delete', {'id': '___id___'}) }}';
        $('#pic_series').load(url.replace('___id___', id), {parameters: {'_method': 'DELETE'}});
    }
}

window.up_seriespic = function(id) {
    var url = '{{ path('pumukitadmin_seriespic_up', {'id': '___id___'}) }}';
    $('#pic_series').load(url.replace('___id___', id), {method:'POST'});
}

window.down_seriespic = function(id) {
    var url = '{{ path('pumukitadmin_seriespic_down', {'id': '___id___'}) }}';
    $('#pic_series').load(url.replace('___id___', id), {method:'POST'});
}

window.submit_delete_person_relation = function(id, roleId, mmId, hName, template)
{
    if (window.confirm("{% trans %}Are you sure you want to delete the relation of{% endtrans %} "+hName+"?")){
        if ('_template' === template){
            var tag_id = roleId+'_person_mms'+template;
        }else{
            var tag_id = '#'+roleId+'_person_mms';
        }
        var url = "{{ path('pumukitadmin_person_delete_relation', {'id': '__id__', 'roleId': '__roleId__','mmId': '__mmId__'}) }}";
        url = url.replace('__id__', id);
        url = url.replace('__roleId__', roleId);
        url = url.replace('__mmId__', mmId);
        $(tag_id).load(url, {parameters: {'_method': 'DELETE'}});
    }
}

window.submit_delete_link = function(id, mmId)
{
    if (window.confirm('{% trans %}Are you sure you want to delete this link?{% endtrans %}')){
        var url = "{{ path('pumukitadmin_link_delete', {'id': 'PLACEHOLDER_ID', 'mmId': 'PLACEHOLDER_MMID'}) }}";
        url = url.replace('PLACEHOLDER_ID', id);
        url = url.replace('PLACEHOLDER_MMID', mmId);
        $('#links_mms').load(url, {parameters: {'_method': 'DELETE'}});
    }
}

window.delete_mmspic = function(id) {
    if (window.confirm('{% trans %}Are you sure you want to delete this picture?{% endtrans %}')) {
        var url = '{{ path('pumukitadmin_mmspic_delete', {'id': '___id___'}) }}';
        $('#pic_mms').load(url.replace('___id___', id), {parameters: {'_method': 'DELETE'}});
    }
}

window.up_mmspic = function(id) {
    var url = '{{ path('pumukitadmin_mmspic_up', {'id': '___id___'}) }}';
    $('#pic_mms').load(url.replace('___id___', id), {method:'POST'});
}

window.down_mmspic = function(id) {
    var url = '{{ path('pumukitadmin_mmspic_down', {'id': '___id___'}) }}';
    $('#pic_mms').load(url.replace('___id___', id), {method:'POST'});
}

window.submit_delete_material = function(id, mmId)
{
    if (window.confirm('{% trans %}Are you sure you want to delete this material?{% endtrans %}')){
        var url = "{{ path('pumukitadmin_material_delete', {'id': 'PLACEHOLDER_ID', 'mmId': 'PLACEHOLDER_MMID'}) }}";
        url = url.replace('PLACEHOLDER_ID', id);
        url = url.replace('PLACEHOLDER_MMID', mmId);
        $('#materials_mms').load(url, {parameters: {'_method': 'DELETE'}});
    }
}

window.submit_delete_track = function(id, mmId)
{
    if (window.confirm('{% trans %}Are you sure you want to delete this track?{% endtrans %}')){
        var url = "{{ path('pumukitadmin_track_delete', {'id': 'PLACEHOLDER_ID', 'mmId': 'PLACEHOLDER_MMID'}) }}";
        url = url.replace('PLACEHOLDER_ID', id);
        url = url.replace('PLACEHOLDER_MMID', mmId);
        $('#tracks_mms').load(url, {parameters: {'_method': 'DELETE'}});
    }
}

window.submit_delete_person = function(id, countMm, personHName)
{
    if (countMm == 0){
        if (window.confirm("{% trans %}Are you sure you want to delete the data of{% endtrans %} "+personHName+"?")){
            var url = "{{ path('pumukitnewadmin_person_delete', {'id': '__id__'}) }}";
            $('#list_people').load(url.replace('__id__', id), {'_method': 'DELETE'}, function(){$.material.init();});
    }
    }else{
        window.alert('{% trans %}Cannot delete the data of{% endtrans %} '+personHName+'. '+ countMm+' {% trans %}multimedia object(s) contain(s) this person{% endtrans %}.');
    }
}

window.click_fila_url = function(element, tr, url)
{
  $('#preview_'+element).load(url);

  $('.success').removeClass('success');
  $(tr.parentNode).addClass('success');
}

window.click_checkbox_all = function(element, value)
{
  $('input.'+element+'_checkbox').prop('checked', value);
}

window.filter_click_letter = function(letter)
{
  $('#filters_letter').val(letter);
  $('#list_people').load('{{ path('pumukitnewadmin_person_list') }}', $('#filter_people').serialize());
}

window.change_select = function(element, selector)
{
    var i = selector.val();
    switch(i){
/* TODO
    case 'transc_pause':
        if (confirm('Pausar videos')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/pause', {
		            asynchronous: true,
		            evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
		            parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			    );
        }
        break;
    case 'transc_play':
        if (confirm('Reanudar videos')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/continue', {
		            asynchronous: true,
		            evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
		            parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			    );
        }
        break;
    case 'transc_borrar':
        if (confirm('Borrar objetos multimedia')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/delete', {
		asynchronous: true,
		evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
		parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			    );
        }
        break;
    case 'transc_limpiar':
        if (confirm('Limpiar videos completados del listado')) {
            new Ajax.Updater('list_transcoders', '/editar.php/transcoders/clean', {
		            asynchronous: true,
		            evalScripts: true,
                onSuccess:  selector.selectedIndex = 0,
		            parameters: 'ids='+$$('.transcoder_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			    );
        }
        break;
*/

    case 'delete_selected':
        var ids = [];
        $('.' + element + '_checkbox:checked').each(function(){
            var $this = $(this);
            ids.push($this.attr("id"));
        });
        if (ids.length == 0) break;
        if (confirm('{% trans %}Are you sure?{% endtrans %}')) {
            var route = '{{ path('pumukitnewadmin_person_batch_delete', {'ids': '__ids__'}) }}';
            $('#list_people').load(route.replace('__ids__', JSON.stringify(ids)));
        }
        break;
    case 'create':
        $('.modal-content').load("{{ path('pumukitnewadmin_person_create') }}");
        $('#myModal').modal('show');
        selector.selectedIndex = 0;
        break;
/* TODO
    case 'serial_preview':
        window.open('/editar.php/serials/previewall');
        selector.selectedIndex = 0;
        break;
    case 'serial_master':
	Modalbox.show('/editar.php/transcoders/masterserial', {title:'Master Multimedia', width:800});
        selector.selectedIndex = 0;
        break;
      //separar honores sel
    case 'inv_working_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/working', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
      //separar honores sel
    case 'inv_working_all':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/working', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'all=1'}
			);
        break;
    //order mm
    case 'set_order_rec_asc':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/orderby/type/rec_asc', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'serial=' + $('mms_serial_id').value}
			);
        break;
    //order mm
    case 'set_order_rec_des':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/orderby/type/rec_des', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'serial=' + $('mms_serial_id').value}
			);
        break;    //order mm
    case 'set_order_pub_asc':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/orderby/type/pub_asc', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'serial=' + $('mms_serial_id').value}
			);
        break;    //order mm
    case 'set_order_pub_des':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/orderby/type/pub_des', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'serial=' + $('mms_serial_id').value}
			);
        break;
    case 'cut_mm':
        selected = $$('.mm_checkbox:checked');
        if (selected.length == 0) break;
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/cut', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+selected.invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'paste_mm':
        if (confirm('Pegar objeto multimedia')) {
            new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/paste', {
		asynchronous: true,
		evalScripts: true,
		onSuccess:  selector.selectedIndex = 0,
		parameters: 'serial=' + $('mms_serial_id').value}
			    );
	}
        break;
      //status mm
    case 'set_status_0_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/0', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'set_status_1_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/1', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'set_status_2_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/2', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'set_status_3_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/change/status/3', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'inv_announce_sel':
        new Ajax.Updater('list_'+element+'s', '/editar.php/'+element+'s/inv/field/announce', {
	    asynchronous: true,
	    evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
	    parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
			);
        break;
    case 'inv_announce_virtualserial_sel':
        new Ajax.Updater('list_mms', '/editar.php/virtualserial/inv/field/announce', {
            asynchronous: true,
            evalScripts: true,
            onSuccess:  selector.selectedIndex = 0,
            parameters: 'ids='+$$('.'+element+'_checkbox:checked').invoke('getAttribute', 'id').toJSON()}
                        );
        break;
*/
    }
  selector.selectedIndex = 0;

}
