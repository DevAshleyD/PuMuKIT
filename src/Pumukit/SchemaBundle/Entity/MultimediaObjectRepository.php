<?php

namespace Pumukit\SchemaBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Pumukit\SchemaBundle\Entity\MultimediaObject;
use Pumukit\SchemaBundle\Entity\Person;
use Pumukit\SchemaBundle\Entity\Role;
use Pumukit\SchemaBundle\Entity\PersonInMultimediaObject;

// Probar si es necesario
// use Doctrine\ORM\Query\ResultSetMapping;

/**
 * MultimediaObjectRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */



class MultimediaObjectRepository extends EntityRepository
{
	/**
	 * Finds all the MultimediaObject with the given person and role
	 * If no role is passed, finds all the MultimediaObjects from that person.
	 *
	 * @param Person $person
	 * @param Role $role
	 */
	public function findByPersonAndRole(Person $person, Role $role=null)
	{

		// Puedo probar return $this->getentityManager()
		// ->createQuery (...) 
		// como hacen en MeetingRepository de cmar

		// TO DO: 	Ordenar por RANK 
		// 			Revisar execpciones

		$em = $this->getEntityManager();

		if ($role == null){
			$query = $em->createQuery('SELECT mm 
				FROM PumukitSchemaBundle:MultimediaObject mm
				JOIN mm.people_in_multimedia_object pimo
				JOIN pimo.person p
				WHERE p = :person
				ORDER BY mm.rank ASC')
			->setParameter('person', $person);

		} else {
			$query = $em->createQuery('SELECT mm 
				FROM PumukitSchemaBundle:MultimediaObject mm
				JOIN mm.people_in_multimedia_object pimo
				JOIN pimo.person p
				JOIN pimo.role r
				WHERE p = :person AND r = :role
				ORDER BY mm.rank ASC')
			->setParameter('person', $person)
			->setParameter('role', $role);
		}

		return $query->getResult();			
;
	}
	/**
	 * Finds the max_results number of MultimediaObjects with the given series.
	 * If no max_results is passed, finds all the MultimediaObjects from that series.
	 *
	 * @param Series $serie
	 * @param $max_results
	 */
	public function findBySeries(Series $serie, $max_results = null)
	{
		$em = $this->getEntityManager();
		if ($max_results == null){
			$query = $em->createQuery('SELECT mm 
				FROM PumukitSchemaBundle:MultimediaObject mm
				JOIN mm.series s
				WHERE s = :series
				ORDER BY mm.rank ASC')
			->setParameter('series', $serie);
		} else {
			$query = $em->createQuery('SELECT mm 
				FROM PumukitSchemaBundle:MultimediaObject mm
				JOIN mm.series s
				WHERE s = :series
				ORDER BY mm.rank ASC')
			->setParameter('series', $serie)
			->setMaxResults($max_results);	
		}
		
		return $query->getResult();
	}
}